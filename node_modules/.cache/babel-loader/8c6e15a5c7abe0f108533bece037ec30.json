{"ast":null,"code":"var _jsxFileName = \"/home/mark/Garage/web-template/src/components/ProgressiveImage/ProgressiveImage.tsx\";\n\n/**\n* This is template for progressive image loading, if not required then you can avoid this component\n*/\nimport React, { Component } from \"react\";\nimport './ProgressiveImage.css';\n\nconst omit = (obj, omitKey) => Object.keys(obj).reduce((result, key) => {\n  if (key !== omitKey) {\n    result[key] = obj[key];\n  }\n\n  return result;\n}, {});\n\nconst overlayStyles = {\n  // position: \"absolute\",\n  filter: \"blur(1px)\",\n  transition: \"opacity ease-in 1000ms\",\n  clipPath: \"inset(0)\"\n};\nexport class ProgressiveImage extends Component {\n  constructor(props) {\n    super(props);\n    this.highResImage = null;\n    this.state = {\n      highResImageLoaded: false\n    };\n  }\n\n  render() {\n    const {\n      overlaySrc\n    } = this.props;\n    const {\n      highResImageLoaded\n    } = this.state;\n    let filteredProps = omit(this.props, \"overlaySrc\");\n    console.log({\n      highResImageLoaded\n    });\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"image-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", Object.assign({}, filteredProps, {\n      onLoad: () => {\n        this.setState({\n          highResImageLoaded: true\n        });\n      },\n      ref: img => {\n        this.highResImage = img;\n      },\n      src: this.props.src\n    }, highResImageLoaded && {\n      style: {\n        display: \"block\",\n        height: this.props.height,\n        width: this.props.width\n      }\n    }, {\n      className: \"main-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", Object.assign({}, filteredProps, {\n      className: `${this.props.className}  ${overlayStyles}`\n    }, highResImageLoaded && {\n      style: {\n        display: \"none\"\n      }\n    }, {\n      src: overlaySrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/mark/Garage/web-template/src/components/ProgressiveImage/ProgressiveImage.tsx"],"names":["React","Component","omit","obj","omitKey","Object","keys","reduce","result","key","overlayStyles","filter","transition","clipPath","ProgressiveImage","constructor","props","highResImage","state","highResImageLoaded","render","overlaySrc","filteredProps","console","log","setState","img","src","style","display","height","width","className"],"mappings":";;AAAA;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,wBAAP;;AAEA,MAAMC,IAAI,GAAG,CAACC,GAAD,EAAWC,OAAX,KACXC,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,MAAjB,CAAwB,CAACC,MAAD,EAAcC,GAAd,KAA8B;AACpD,MAAIA,GAAG,KAAKL,OAAZ,EAAqB;AACnBI,IAAAA,MAAM,CAACC,GAAD,CAAN,GAAcN,GAAG,CAACM,GAAD,CAAjB;AACD;;AACD,SAAOD,MAAP;AACD,CALD,EAKG,EALH,CADF;;AAQA,MAAME,aAAa,GAAG;AACpB;AACAC,EAAAA,MAAM,EAAE,WAFY;AAGpBC,EAAAA,UAAU,EAAE,wBAHQ;AAIpBC,EAAAA,QAAQ,EAAE;AAJU,CAAtB;AAoBA,OAAO,MAAMC,gBAAN,SAA+Bb,SAA/B,CAAsD;AAE3Dc,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AADwB,SAD1BC,YAC0B,GADa,IACb;AAExB,SAAKC,KAAL,GAAa;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAAb;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKL,KAA5B;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAyB,KAAKD,KAApC;AACA,QAAII,aAAa,GAAGpB,IAAI,CAAC,KAAKc,KAAN,EAAa,YAAb,CAAxB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,MAAAA;AAAF,KAAZ;AACA,wBACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,6CACcG,aADd;AAEU,MAAA,MAAM,EAAE,MAAM;AACZ,aAAKG,QAAL,CAAc;AAAEN,UAAAA,kBAAkB,EAAE;AAAtB,SAAd;AACD,OAJX;AAKU,MAAA,GAAG,EAAEO,GAAG,IAAI;AACV,aAAKT,YAAL,GAAoBS,GAApB;AACD,OAPX;AAQU,MAAA,GAAG,EAAE,KAAKV,KAAL,CAAWW;AAR1B,OAScR,kBAAkB,IAAI;AAAES,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWc,MAAvC;AAA8CC,QAAAA,KAAK,EAAE,KAAKf,KAAL,CAAWe;AAAhE;AAAT,KATpC;AAUU,MAAA,SAAS,EAAC,YAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAaG,6CACaT,aADb;AAES,MAAA,SAAS,EAAG,GAAE,KAAKN,KAAL,CAAWgB,SAAU,KAAItB,aAAc;AAF9D,OAGaS,kBAAkB,IAAI;AAAES,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAAT,KAHnC;AAIS,MAAA,GAAG,EAAER,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbH,CADF;AAsBD;;AAjC0D","sourcesContent":["/**\n* This is template for progressive image loading, if not required then you can avoid this component\n*/\n\nimport React, { Component } from \"react\";\nimport './ProgressiveImage.css';\n\nconst omit = (obj: any, omitKey: string) =>\n  Object.keys(obj).reduce((result: any, key: string) => {\n    if (key !== omitKey) {\n      result[key] = obj[key];\n    }\n    return result;\n  }, {});\n\nconst overlayStyles = {\n  // position: \"absolute\",\n  filter: \"blur(1px)\",\n  transition: \"opacity ease-in 1000ms\",\n  clipPath: \"inset(0)\"\n};\n\ntype Props = {\n  className?: string, \n   alt: string,\n   overlaySrc: string,\n   src: string,\n   width?: string | number,\n   height?: string | number\n};\n\ntype State = {\n  highResImageLoaded: boolean;\n}\n\nexport class ProgressiveImage extends Component<Props,State> {\n  highResImage: HTMLImageElement | null =null;\n  constructor(props: Props) {\n    super(props);\n    this.state = { highResImageLoaded: false };\n  }\n  render() {\n    const { overlaySrc } = this.props;\n    const { highResImageLoaded } = this.state;\n    let filteredProps = omit(this.props, \"overlaySrc\");\n    console.log({ highResImageLoaded})\n    return (\n      <span className='image-holder'>\n        <img\n                  {...filteredProps}\n                  onLoad={() => {\n                    this.setState({ highResImageLoaded: true });\n                  }}\n                  ref={img => {\n                    this.highResImage = img;\n                  }}\n                  src={this.props.src}\n                  {...highResImageLoaded && { style: { display: \"block\", height: this.props.height,width: this.props.width } }}\n                  className='main-image'\n                />\n         <img\n                  {...filteredProps}\n                  className={`${this.props.className}  ${overlayStyles}`}\n                  {...highResImageLoaded && { style: { display: \"none\" } }}\n                  src={overlaySrc}\n                />\n      </span>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}